{
  "swagger": "2.0",
  "host": "partner.onetwotrip.com",
  "schemes": [
    "http",
    "https"
  ],
  "info": {
    "description": "Документация по методам для работы с OTT",
    "title": "API документация для OTT",
    "version": "0.0.1",
    "termsOfService": "http://example.com/about/terms",
    "contact": {
      "name": "Denis",
      "url": "http://example.com/contact",
      "email": "apidocs@example.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://example.com"
    }
  },
  "basePath": "/",
  "paths": {
    "/wl_api/confirmation/checkavail1/": {
      "post": {
        "consumes": ["multipart/form-data"],
        "description": "Запрос на создание брони выбранного перелета",
        "summary": "Запрос на создание брони выбранного перелета",
        "externalDocs": {
          "description": "Find out more",
          "url": "http://docs.example.com/management/apis/get/entities"
        },
        "operationId": "checkavail1",
        "tags": [
          "avia"
        ],
        "produces": [
          "application/json; charset=UTF-8"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "avail": {
                  "type": "boolean"
                },
                "id": {
                  "type": "string",
                  "minLength": 1
                },
                "status": {
                  "type": "string",
                  "minLength": 1
                },
                "additionalServicesStatus": {
                  "type": "object",
                  "properties": {}
                },
                "createdAt": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "avail",
                "id",
                "status",
                "additionalServicesStatus",
                "createdAt"
              ]
            }
          }
        },
        "security": [],
        "parameters": [
          {
            "in": "body",
            "name": "params",
            "description": "Request Payload Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Params"
            }
          }
        ]
      }
    }
  },
  "definitions": {
    "Params": {
      "description": "Params object",
      "properties": {
        "currency": {
          "type": "string",
          "description": "currency"
        },
        "customerLanguage": {
          "type": "string",
          "description": "customerLanguage"
        },
        "email": {
          "type": "string",
          "description": "email"
        },
        "fareKey": {
          "type": "string",
          "description": "fareKey"
        },
        "gdsInfo": {
          "type": "string",
          "description": "gdsInfo"
        },
        "passengers": {
          "type": "array",
          "description": "passengers",
          "items": {
            "$ref": "#/definitions/Passenger"
          }
        },
        "searchId": {
          "type": "string",
          "description": "searchId"
        },
        "source": {
          "type": "string",
          "description": "source"
        },
        "testGds": {
          "type": "boolean",
          "description": "testGds"
        }
      },
      "required": [
        "currency",
        "customerLanguage",
        "email",
        "fareKey",
        "gdsInfo",
        "passengers"
      ]
    },
    "Passenger": {
      "description": "passenger item",
      "properties": {
        "id": {
          "type": "integer",
          "description": "passenger index"
        },
        "ageType": {
          "type": "string",
          "description": "age type",
          "enum": [
            "ADT",
            "CNN",
            "INF"
          ]
        },
        "birthDate": {
          "type": "string",
          "description": "birth date in YYYYMMDD format"
        },
        "firstName": {
          "type": "string",
          "description": "first name"
        },
        "lastName": {
          "type": "string",
          "description": "last name"
        },
        "passNumber": {
          "type": "string",
          "description": "passenger document number"
        }
      },
      "required": [
        "id",
        "ageType",
        "birthDate",
        "firstName",
        "lastName",
        "passNumber"
      ]
    }
  }
}